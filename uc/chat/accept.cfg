var ghost = require(process.argv[2]+'/webrexco/cfg/ghost.js'); 
var gapi = require(process.argv[2]+'/webrexco/cmn/gapi.js');

exports.itfconf = function() {
	return new CurrentAPI().conf();
}

exports.itfleft = function(req,res,fld,fle) {
	return new CurrentAPI().output(req,res,fld,fle);
}

var CurrentAPI = gapi.AuthorizeAPI.extend({
    conf: function() { return { auth: true,
        	type: "json",
        	itfs: [
	            {
	                host: ghost.dscm.makercenter.addr,
	                port: ghost.dscm.makercenter.port,
	                iurl: "/wechatAccountApp?actn=getUserMessage",
	                uuid: "appAccountApp",
	                meth: "post",
	                type: "sdcm",
	                next: [],
	                func: function(req,res,fld,fle){
	                	return new CurrentAPI("appAccountApp").
	                		callFunc(req,res,fld,fle);
	                }
	            }
        	]
    	};
    },

	doCallFunc: function(uuid, req, res, fld, fle) {
		// var userId = req.session.user.userId;
		// var ip = gapi.getIPv4(req.user.addr);
		// if(gapi.emptyEqual(userId,"")) {
		// 	res.jsonp(gapi.toResult(1, "用户ID不能为空"));
		// 	ghost.getLogger().info("[doCallFunc]IP：%s, service: datasvr.account.getUserInfo, dc: wechatAccountApp, message: 'param error', param: userId=%s", ip, userId);
		// 	return null;
		// }
		// ghost.getLogger().info("[doCallFunc]IP：%s, service: datasvr.account.getUserInfo, dc: wechatAccountApp, message: 'param', param: userId=%s", ip, userId);
	 //    // return {
	 //    //    "claz" : "['java.lang.String']",
	 //    //    "json" : [userId]
	 //    // };
		var accept = gapi.getParameter(req, "accept"),
			uid = gapi.getParameter(req, "uid");
		console.log(">>>>accept.cgi accept=%s, uid=%s",accept,uid);
	    req.uuid["moc"] = true;

	    return null;
	},

	doOutput: function(req, res, fld, fle) {
		// var ip = gapi.getIPv4(req.user.addr);
		// if(!req.rslt['appAccountApp']){
		// 	ghost.getLogger().error("[doOutput]IP：%s, service: datasvr.account.getUserInfo, dc: wechatAccountApp, message: 'rslt is null', rslt: %s", ip, JSON.stringify(req.rslt['appAccountApp']));
		// 	return gapi.toResult(500, "系统异常");
		// }
		// if(gapi.emptyNoequal(req.rslt['appAccountApp'].code, 0)) {
		// 	//这里根据后端服务返回的code值不同提示信息不同
		// 	if(gapi.emptyEqual(req.rslt['appAccountApp'].message, "")) {
		// 		req.rslt['appAccountApp'].message = "获取信息失败";
		// 	}
		// 	ghost.getLogger().error("[doOutput]IP：%s, service: datasvr.account.getUserInfo, dc: wechatAccountApp, message: 'rslt error', rslt: %s", ip, JSON.stringify(req.rslt['appAccountApp']));
		// 	return gapi.toResult(1, req.rslt['appAccountApp'].message);
		// }

		// return gapi.toResult(200, "请求成功",req.rslt['appAccountApp']);
		var output = {
			"code":0,
			"message":"success"
		};
		return gapi.toResult(0,"sss", output);
	}
});
