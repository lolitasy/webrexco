var ghost = require(process.argv[2]+'/webrexco/cfg/ghost.js'); 
var gapi = require(process.argv[2]+'/webrexco/cmn/gapi.js');

exports.itfconf = function() {
	return new CurrentAPI().conf();
}

exports.itfleft = function(req,res,fld,fle) {
	return new CurrentAPI().output(req,res,fld,fle);
}

var CurrentAPI = gapi.BaseAPI.extend({
    conf: function() { return { auth: false,
        	type: "json",
        	itfs: [
	            {
	                host: ghost.dscm.makercenter.addr,
	                port: ghost.dscm.makercenter.port,
	                iurl: "/pcHelpCenter?actn=helpDetails",
	                uuid: "pcHelpCenter",
	                meth: "post",
	                type: "sdcm",
	                next: [],
	                func: function(req,res,fld,fle){
	                	return new CurrentAPI("pcHelpCenter").
	                		callFunc(req,res,fld,fle);
	                }
	            }
        	]
    	};
    },

	doCallFunc: function(uuid, req, res, fld, fle) {
		/*校验参数*/
	    var ip = gapi.getIPv4(req.user.addr);
	    var id = gapi.getParameter(req, "id");
		ghost.getLogger().info("[doCallFunc]IP：%s, service: helpDetails, dc: pcHelpCenter.helpDetails, message: 'param ', param:id=%s", ip,id);
	   	return {
	       "claz" : "['java.lang.Long']",
	       "json" : [id]
	    };
		// req.uuid["moc"] = true;
		// return null;
	},

	doOutput: function(req, res, fld, fle) {
	    var ip = gapi.getIPv4(req.user.addr);
		if(!req.rslt['pcHelpCenter']){
			ghost.getLogger().error("[doOutput]IP：%s, service: helpDetails, dc: pcHelpCenter.helpDetails, message: 'rslt is null', rslt: %s", ip, JSON.stringify(req.rslt['pcHelpCenter']));
			return gapi.toResult(500, "系统异常");
		}
		return gapi.toResult(null, null, req.rslt['pcHelpCenter']);
		// var output = {
		// 	"code" : 0,
		// 	"message" : "success",
		// 	"content":"1.什么是疯巢？疯巢是铼享客内的一个泛创客社群，有着理想、生活心愿、创业梦想、公益心的个人家庭都可以加入，疯巢成员很有可能得到铼享客的资助，并提供免费资源和能力，实现理想。"
		// };
		// return gapi.toResult(null, null,output);
	}
});
