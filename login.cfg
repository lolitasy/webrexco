var ghost = require(process.argv[2]+'/webrexco/cfg/ghost.js'); 
var gapi = require(process.argv[2]+'/webrexco/cmn/gapi.js');

exports.itfconf = function() {
    return new CurrentAPI().conf();
}

exports.itfleft = function(req,res,fld,fle) {
    return new CurrentAPI().output(req,res,fld,fle);
}

var CurrentAPI = gapi.BaseAPI.extend({
    conf: function() { return { auth: false,
            type: "json",
            itfs: [
                {
                    host: ghost.dscm.makercenter.addr,
                    port: ghost.dscm.makercenter.port,
                    iurl: "/pcLoginRegister?actn=login",
                    uuid: "pcLoginRegister",
                    meth: "post",
                    type: "sdcm",
                    next: [],
                    func: function(req,res,fld,fle){
                        return new CurrentAPI("pcLoginRegister").
                            callFunc(req,res,fld,fle);
                    }
                }
            ]
        };
    },
    
	doCallFunc: function(uuid, req, res, fld, fle) {
		var ip = gapi.getIPv4(req.user.addr);
		var username = gapi.getParameter(req, "username"),
			password = gapi.getParameter(req, "password"),
			verifycode = gapi.getParameter(req, "valiCode");
		var inviteUserId=null;
		
		if(gapi.emptyEqual(username ,"")) {
			res.jsonp(gapi.toResult(201, "手机号码不能为空"));
			ghost.getLogger().info("[doCallFunc]IP：%s, service: login.register, dc: pcLoginRegister.login, message: 'param error', param: username=%s", ip, username);
			return null;
		}

		if(gapi.emptyEqual(password,"")) {
			res.jsonp(gapi.toResult(201, "密码不能为空"));
			ghost.getLogger().info("[doCallFunc]IP：%s, service: login.register, dc: pcLoginRegister.login, message: 'param error', param: password", ip,password);
			return null;
		}

		if(!(req.user.code&&verifycode.toLowerCase() == req.user.code.toLowerCase())) {

			res.jsonp({"code":202,"message":"图形验证码错误"});
			ghost.getLogger().info("[doCallFunc]IP：%s, service: login.register, dc: pcLoginRegister.register, message: 'param error', param: verifycode=%s", ip, verifycode);
			return null;
		}
		ghost.getLogger().info("[doCallFunc]IP：%s, service: pcLogin, dc: pcLoginRegister.login, message: 'param', param: username=%s", ip, username, password, inviteUserId);
	    return {
	       "claz" : "['java.lang.String','java.lang.String','java.lang.Long']",
	       "json" : [username, password, inviteUserId]
	    };
	},
	doOutput: function(req, res, fld, fle) {
		var ip = gapi.getIPv4(req.user.addr);
		if(!req.rslt['pcLoginRegister']){
			ghost.getLogger().error("[doOutput]IP：%s, service: pcLogin, dc: pcLoginRegister.login, message: 'rslt is null', rslt: %s", ip, JSON.stringify(req.rslt['pcLoginRegister']));
			return gapi.toResult(500, "系统异常");
		}
		if(gapi.emptyNoequal(req.rslt['pcLoginRegister'].code, 0)) {
			//这里根据后端服务返回的code值不同提示信息不同
			if(gapi.emptyEqual(req.rslt['pcLoginRegister'].message, "")) {
				req.rslt['pcLoginRegister'].message = "登录失败";
			}
			var username = gapi.getParameter(req, "username");
			ghost.getLogger().error("[doOutput]IP：%s, service: pcLogin, dc: pcLoginRegister.login, message: 'rslt error', rslt: %s", ip, JSON.stringify(req.rslt['pcLoginRegister']));
			return gapi.toResult(1, req.rslt['pcLoginRegister'].message);
		}
		
		//程序执行到这里用户密码一定不会为空,直接记录到session
		var userDTO = req.rslt['pcLoginRegister'].data.user;
			req.session.user= {
				"addr":gapi.getIPv4(req.user.addr),
				"userId":userDTO.userId,
				"userName":userDTO.username,
				"realname":userDTO.realname,
				"realStatus":userDTO.realStatus,
				"phone":userDTO.phone,
				"phoneStatus":userDTO.phoneStatus,
				"idealStatus":userDTO.idealStatus,
				"idealLev":userDTO.idealLev,
				"ventureStatus":userDTO.ventureStatus,
				"ventureLev":userDTO.ventureLev,
				"modifytime":userDTO.modifytime,
				"bankCardStatus":null,
				"cardNo":null
			};
		//ghost.getLogger().info("[doOutput]IP：%s service: pcLogin, dc: pcLoginRegister.login, message: 'success', rslt: userId=%s,userName=%s", ip, userId, userName);
		return gapi.toResult(null, "登录成功",req.rslt['pcLoginRegister']);
	}
});
