"use strict";

const ghost = require(process.argv[2] + '/webrexco/cfg/ghost.js');
const gapi = require(process.argv[2] + '/webrexco/cmn/gapi.js');

exports.itfconf = function() {
	return new CurrentAPI().conf();
}

exports.itfleft = function(req,res,fld,fle) {
	return new CurrentAPI().output(req,res,fld,fle);
}

var CurrentAPI = gapi.BaseAPI.extend({
    conf: function() { return { auth: false,
        	type: "json",
        	itfs: [
	            {
	                host: ghost.dscm.makercenter.addr,
	                port: ghost.dscm.makercenter.port,
	                iurl: "/pcWechatCoreApp?actn=getWechatAccessToken",
	                uuid: "pcWechatCoreApp",            
	                meth: "post",
	                type: "sdcm",
	                next: [],
	                func: function(req,res,fld,fle){
	                	return new CurrentAPI("pcWechatCoreApp").
	                		callFunc(req,res,fld,fle);
	                }
	            }      		
        	]
    	};
    },
	
	doCallFunc: function(uuid, req, res, fld, fle) {
		var code=gapi.getParameter(req,"code"),
			ip = gapi.getIPv4(req.user.addr);
		ghost.getLogger().info("[doCallFunc]IP：%s, service: oauth.data.getWechatAccessToken, dc: pcWechatCoreApp.getWechatAccessToken, message: 'param', param: code=%s", ip, code);
	    return {
	       "claz" : "['java.lang.String']",
	       "json" : [code]
	    };
	},
		    
	doOutput: function(req, res, fld, fle) {
		var ip = gapi.getIPv4(req.user.addr);

		const result = req.rslt['pcWechatCoreApp'];

		if(!result){
			ghost.getLogger().error("[doOutput]IP：%s, service: oauth.data.getWechatAccessToken, dc: pcWechatCoreApp.getWechatAccessToken, message: 'rslt is null', rslt: %s", ip, JSON.stringify(req.rslt['pcWechatCoreApp']));
			return gapi.toResult(500, "系统异常");
		}
		if(gapi.emptyNoequal(result.code, 0)) {
			//这里根据后端服务返回的code值不同提示信息不同
			if(gapi.emptyEqual(req.rslt['pcWechatCoreApp'].message, "")) {
				req.rslt['pcWechatCoreApp'].message = "数据加载失败";
			}
			ghost.getLogger().error("[doOutput]IP：%s, service: oauth.data.getWechatAccessToken, dc: pcWechatCoreApp.getWechatAccessToken, message: 'rslt error', rslt: %s", ip, JSON.stringify(result));
			return gapi.toResult(1, req.rslt['pcWechatCoreApp'].message);
		}
		ghost.getLogger().info("[doOutput]IP：%s, service: oauth.data.getWechatAccessToken, dc: pcWechatCoreApp.getWechatAccessToken, message: 'success', rslt: %s", ip, JSON.stringify(result));
		result.data = result.oauth2Token;
		result.data.openid = result.data.openId;
		return gapi.toResult(null, null, result);
	}
});
