var ghost = require(process.argv[2]+'/webrexco/cfg/ghost.js'); 
var gapi = require(process.argv[2]+'/webrexco/cmn/gapi.js');

exports.itfconf = function() {
    return new CurrentAPI().conf();
}

exports.itfleft = function(req,res,fld,fle) {
    return new CurrentAPI().output(req,res,fld,fle);
}

var CurrentAPI = gapi.BaseAPI.extend({
    conf: function() { return { auth: false,
            type: "json",
            itfs: [
                {
                    host: ghost.dscm.makercenter.addr,
                    port: ghost.dscm.makercenter.port,
                    iurl: "/userApp?actn=getUserByPhoneForRegister",
                    uuid: "userApp",
                    meth: "post",
                    type: "sdcm",
                    next: [],
                    func: function(req,res,fld,fle){
                        return new CurrentAPI("userApp").
                            callFunc(req,res,fld,fle);
                    }
                }
            ]
        };
    },
	doCallFunc: function(uuid, req, res, fld, fle) {
		var phone = gapi.getParameter(req, "username");
		var ip = gapi.getIPv4(req.user.addr);
		if(gapi.emptyEqual(phone ,"")) {
			res.jsonp(gapi.toResult(1, "手机号码不能为空"));
			ghost.getLogger().info("[doCallFunc]IP:%s, service: login.checkUserName, dc: userApp.getUserByPhoneForRegister, message: 'param error', param: phone=%s", ip, phone);
			return null;
		}
		ghost.getLogger().info("[doCallFunc]IP:%s, service: login.checkUserName, dc: userApp.getUserByPhoneForRegister, message: 'param', param: phone=%s", ip, phone);
	    return {
	       "claz" : "['java.lang.String']",
	       "json" : [phone]
	    };
	},
	doOutput: function(req, res, fld, fle) {
		ip = gapi.getIPv4(req.user.addr);
		if(!req.rslt['userApp']){
			ghost.getLogger().error("[doOutput]IP：%s, service: checkUserNameService, dc: userApp.getUserByPhoneForRegister, message: 'rslt is null', rslt: %s", ip, JSON.stringify(req.rslt['userApp']));
			return gapi.toResult(500, "系统异常");
		}
		if(gapi.emptyNoequal(req.rslt['userApp'].code, 0)) {
			//这里根据后端服务返回的code值不同提示信息不同
			if(gapi.emptyEqual(req.rslt['userApp'].message, "")) {
				req.rslt['userApp'].message = "获取信息失败";
			}
			ghost.getLogger().error("[doOutput]IP：%s, service: checkUserNameService, dc: userApp.getUserByPhoneForRegister, message: 'rslt error', rslt: %s", ip, JSON.stringify(req.rslt['userApp']));
			return gapi.toResult(1, req.rslt['userApp'].message);
		}
		return gapi.toResult(0, null, req.rslt['userApp']);
	}
});
